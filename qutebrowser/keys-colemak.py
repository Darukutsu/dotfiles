## Characters used for hint strings.
## Type: UniqueCharString
c.hints.chars = "arstgmneio"

c.hints.selectors["code"] = [
    # Selects all code tags whose direct parent is not a pre tag
    ":not(pre) > code",
    "pre",
]

config.set(
    "hints.selectors",
    {
        **c.hints.selectors,
        "scrollable": [".__qb_scrollable__"],
    },
)

# bind_chained('ttt', 'cmd-set-text -s :tab-select', 'tab-give')


def bind_chained(key, *commands):
    config.bind(key, " ;; ".join(commands))


# Bindings for normal mode
config.unbind("H")
config.unbind("J")
config.unbind("K")
config.unbind("L")
config.unbind("h")
config.unbind("j")
config.unbind("k")
config.unbind("l")
config.unbind("M")
config.unbind("N")
# config.unbind("E")
# config.unbind("I")
config.unbind("m")
config.unbind("n")
# config.unbind("e")
config.unbind("i")
config.unbind("D")
config.unbind("M")
config.unbind("gJ")
config.unbind("gK")
config.unbind("gO")
config.unbind("go")
config.unbind("gU")
config.unbind("gu")
config.unbind("gf")
config.unbind("ga")
config.unbind("gd")
config.unbind("r")
config.unbind("T")
# config.unbind('co') # 'u' to undo all tabs

# config.bind("'", 'mode-enter jump_mark')
# config.bind('=', 'zoom')
# config.bind('+', 'zoom-in')
# config.bind('-', 'zoom-out')
# config.bind('.', 'cmd-repeat-last')
# config.bind('/', 'cmd-set-text /')
# config.bind(':', 'cmd-set-text :')
# config.bind('?', 'cmd-set-text ?')
# config.bind('@', 'macro-run')
config.bind("*", "tab-pin")
# config.bind('`', 'mode-enter set_mark')
config.bind(">", "tab-move +")
config.bind("<", "tab-move -")
# config.bind('[[', 'navigate prev')
# config.bind(']]', 'navigate next')
# config.bind('{{', 'navigate prev -t')
# config.bind('}}', 'navigate next -t')


config.unbind(";O")
config.unbind(";o")
config.unbind(";Y")
config.unbind(";y")
config.unbind(";b")
config.unbind(";f")
config.unbind(";d")
config.unbind(";t")
# config.bind(';I', 'hint images tab')
# config.bind(';O', 'hint links fill :open -t -r {hint-url}')
# config.bind(';R', 'hint --rapid links window')
# config.bind(';Y', 'hint links yank-primary')
# config.bind(';b', 'hint all tab-bg')
# config.bind(';d', 'hint links download')
# config.bind(';f', 'hint all tab-fg')
# config.bind(';h', 'hint all hover')
# config.bind(';i', 'hint images')
# config.bind(';o', 'hint links fill :open {hint-url}')
# config.bind(';r', 'hint --rapid links tab-bg')
config.bind(";e", "hint inputs")
# config.bind(';y', 'hint links yank')
config.bind(";s", "hint scrollable")
config.bind(";v", "hint code userscript code_highlight.py")

config.bind(",bb", "spawn --userscript qute-bitwarden")
config.bind(",bu", "spawn --userscript qute-bitwarden --username-only")
config.bind(",bp", "spawn --userscript qute-bitwarden --password-only")
config.bind(",h", "cmd-set-text -s :back")
config.bind(",l", "cmd-set-text -s :forward")
config.bind(",m", "tab-mute")
config.bind(",p", "print")
config.bind(",r", "spawn --userscript readability-js")
config.bind(",s", "cmd-set-text -s :screenshot")
config.bind(",tt", "spawn --userscript translate")
config.bind(",ts", "spawn --userscript translate --text -t sk")
config.bind(",tuke", "mode-enter insert;;spawn --userscript tuke")
config.bind(",y", "spawn --userscript highlight_text_to_link.py")
for mode in ["normal", "caret"]:
    config.bind("gs", "spawn --userscript yomichad", mode=mode)
    config.bind("gS", "spawn --userscript yomichad --prefix-search", mode=mode)


config.bind("A", "cmd-set-text -s :bookmark-add -t {url}")
config.bind("b", "cmd-set-text -s :tab-focus")
config.bind("B", "cmd-set-text -s :bookmark-load -t")
# config.bind('F', 'hint all tab')
# config.bind('G', 'scroll-to-perc')

# hjkl
config.bind("m", "scroll-px -50 0")
config.bind("M", "back")
config.bind("n", "scroll-px 0 50")
config.bind("N", "tab-prev")
config.bind("e", "scroll-px 0 -50")
config.bind("E", "tab-next")
config.bind("i", "scroll-px 50 0")
config.bind("I", "forward")

config.bind("h", "mode-enter set_mark")
# config.bind('M', 'bookmark-add')
config.bind("k", "search-next")
config.bind("K", "search-prev")
config.bind("o", "cmd-set-text -s :open")
config.bind("O", "cmd-set-text -s :open {url:pretty}")
config.bind("p", "open -- {clipboard}")
config.bind("P", "open -t -- {clipboard}")
config.bind("rr", "reload")
config.bind("ra", "spawn --userscript reload-all")
config.bind("rn", "spawn --userscript reload-all")
config.bind("rf", "reload -f")
# config.bind('R', 'reload -f')
config.bind("tn", "cmd-set-text -s :open -t")
config.bind("tt", "cmd-set-text -s :open -t -r")
config.bind("tw", "cmd-set-text -s :open -t -w")
config.bind("tp", "cmd-set-text -s :open -t -p")
config.bind("Tn", "cmd-set-text -s :open -t {url:pretty}")
config.bind("Tt", "cmd-set-text -s :open -t -r {url:pretty}")
config.bind("Tw", "cmd-set-text -s :open -t -w {url:pretty}")
config.bind("Tp", "cmd-set-text -s :open -t -p {url:pretty}")
config.bind("u", "undo")
config.bind("U", "undo -w")
# config.bind('v', 'mode-enter caret')
# config.bind('V', 'mode-enter caret ;; selection-toggle --line')

config.bind("l", "mode-enter insert")
# config.bind('m', 'quickmark-save')
# config.bind('q', 'macro-record')
# config.bind('T', 'cmd-set-text -sr :tab-focus')
# config.bind('b', 'cmd-set-text -s :quickmark-load')
# config.bind('d', 'tab-close')
# config.bind('f', 'hint')

config.bind("ad", "hint links download")
config.bind("ai", "hint images download")
config.bind("ay", "hint links spawn kitty --directory=~/Downloads/ yt-dlp {hint-url}")
config.bind("ac", "download-cancel")
config.bind("a!", "download-clear")
config.bind("Dd", "download")
config.bind("Dp", "cmd-set-text -s :print --pdf")
# bind_chained('Dg', 'jseval -f ~/.c/qutebrowser/userscripts/download-protected-pdf.js',
#                   'spawn --userscript convert-to-pdf')
config.bind("Dg", "jseval -f ~/.c/qutebrowser/userscripts/download-protected-pdf.js")
config.bind("Dy", "spawn kitty --directory=~/Downloads/ yt-dlp {url}")
config.bind("Dc", "download-cancel")
config.bind("D!", "download-clear")

# Container/Session
config.bind("cg", "spawn --userscript container-open google")
config.bind("cv", "spawn --userscript container-open skola")
# config.bind("cw", "spawn --userscript container-open work")
config.bind("cs", "spawn --userscript container-open shop")
config.bind("cb", "spawn --userscript container-open bank")
config.bind("ca", "cmd-set-text -s :spawn --userscript container-add")
config.bind("cr", "cmd-set-text -s :spawn --userscript container-rm")
config.bind("cl", "spawn --userscript container-ls")

config.bind("g$", "tab-focus -1")
config.bind("g_", "tab-focus 1")
config.bind("g^", "tab-focus 1")
config.bind("g0", "tab-focus last")
config.bind("gl", "tab-focus last")
# config.bind('gB', 'cmd-set-text -s :bookmark-load -t')
config.bind("gc", "tab-clone")
config.bind("gd", "tab-give")
config.bind("gt", "cmd-set-text -s :tab-take")
# config.bind('gJ', 'tab-move +')
# config.bind('gK', 'tab-move -')
# config.bind('gO', 'cmd-set-text :open -t -r {url:pretty}')
# config.bind('gU', 'navigate up -t')
# config.bind('g^', 'tab-focus 1')
# config.bind('ga', 'open -t')
# config.bind('gb', 'cmd-set-text -s :bookmark-load')
# config.bind('gd', 'download')
# config.bind('gf', 'view-source')
# config.bind('gg', 'scroll-to-perc 0')
# config.bind('gi', 'hint inputs --first')
# config.bind('gm', 'tab-move')
# config.bind('go', 'cmd-set-text :open {url:pretty}')
# config.bind('gt', 'cmd-set-text -s :tab-select')
# config.bind('gu', 'navigate up')
# config.bind('PP', 'open -t -- {primary}')
# config.bind('pP', 'open -- {primary}')


# Setter
config.unbind("sf")
config.unbind("sk")
config.unbind("ss")
# config.bind('sf', 'save')
# config.bind('sb', 'cmd-set-text -s :bind')
# config.bind('sk', 'cmd-set-text -s :bind')
# config.bind('ss', 'cmd-set-text -s :set')
# config.bind('st', 'cmd-set-text -s :set -t')

# Show
config.bind("Sb", "bookmark-list --jump -t")
config.bind("Sh", "history -t")
config.bind("Sq", "bookmark-list -t")
config.bind("Ss", "set -t")

# config.bind('tCH', 'c-cycle -p -u *://*.{url:host}/* content.cookies.accept all no-3rdparty never ;; reload')
# config.bind('tCh', 'c-cycle -p -u *://{url:host}/* content.cookies.accept all no-3rdparty never ;; reload')
# config.bind('tCu', 'c-cycle -p -u {url} content.cookies.accept all no-3rdparty never ;; reload')
# config.bind('tIH', 'c-cycle -p -u *://*.{url:host}/* content.images ;; reload')
# config.bind('tIh', 'c-cycle -p -u *://{url:host}/* content.images ;; reload')
# config.bind('tIu', 'c-cycle -p -u {url} content.images ;; reload')
# config.bind('tPH', 'c-cycle -p -u *://*.{url:host}/* content.plugins ;; reload')
# config.bind('tPh', 'c-cycle -p -u *://{url:host}/* content.plugins ;; reload')
# config.bind('tPu', 'c-cycle -p -u {url} content.plugins ;; reload')
# config.bind('tSH', 'c-cycle -p -u *://*.{url:host}/* content.javascript.enabled ;; reload')
# config.bind('tSh', 'c-cycle -p -u *://{url:host}/* content.javascript.enabled ;; reload')
# config.bind('tSu', 'c-cycle -p -u {url} content.javascript.enabled ;; reload')
# config.bind('tcH', 'c-cycle -p -t -u *://*.{url:host}/* content.cookies.accept all no-3rdparty never ;; reload')
# config.bind('tch', 'c-cycle -p -t -u *://{url:host}/* content.cookies.accept all no-3rdparty never ;; reload')
# config.bind('tcu', 'c-cycle -p -t -u {url} content.cookies.accept all no-3rdparty never ;; reload')
# config.bind('th', 'back -t')
# config.bind('tiH', 'c-cycle -p -t -u *://*.{url:host}/* content.images ;; reload')
# config.bind('tih', 'c-cycle -p -t -u *://{url:host}/* content.images ;; reload')
# config.bind('tiu', 'c-cycle -p -t -u {url} content.images ;; reload')
# config.bind('tl', 'forward -t')
# config.bind('tpH', 'c-cycle -p -t -u *://*.{url:host}/* content.plugins ;; reload')
# config.bind('tph', 'c-cycle -p -t -u *://{url:host}/* content.plugins ;; reload')
# config.bind('tpu', 'c-cycle -p -t -u {url} content.plugins ;; reload')
# config.bind('tsH', 'c-cycle -p -t -u *://*.{url:host}/* content.javascript.enabled ;; reload')
# config.bind('tsh', 'c-cycle -p -t -u *://{url:host}/* content.javascript.enabled ;; reload')
# config.bind('tsu', 'c-cycle -p -t -u {url} content.javascript.enabled ;; reload')

# DEV-Tools
# config.bind('wi', 'devtools')
# config.bind('wIf', 'devtools-focus')
# config.bind('wIh', 'devtools left')
# config.bind('wIj', 'devtools bottom')
# config.bind('wIk', 'devtools top')
# config.bind('wIl', 'devtools right')
# config.bind('wIw', 'devtools window')
config.bind("wIs", "view-source")

config.bind("wt", "cmd-set-text -s :tab-give")
config.bind("wT", "cmd-set-text -s :tab-take")
# bind_chained('wbb', 'cmd-set-text -s :tab-select', 'tab-give')
# bind_chained('wbB', 'cmd-set-text -s :tab-select', 'tab-take')
# config.bind('wB', 'cmd-set-text -s :bookmark-load -w')
# config.bind('wf', 'hint all window')
# config.bind('wo', 'cmd-set-text -s :open -w')
# config.bind('wO', 'cmd-set-text :open -w {url:pretty}')
# config.bind('wp', 'open -w -- {clipboard}')

# config.bind('wh', 'back -w')
# config.bind('wl', 'forward -w')

config.bind("Xi", "hint images spawn nsxiv-url {hint-url}")
config.bind("Xd", "hint links spawn kitty --directory=~/Downloads/ yt-dlp {hint-url}")
config.bind("Xm", "hint links spawn mpv {hint-url}")
config.bind("Xm", "hint links spawn mpv {hint-url}")
config.bind("Xp", "hint links spawn zathura {hint-url}")
config.bind("xi", "hint images spawn nsxiv-url {hint-url}")
config.bind("xd", "hint links spawn kitty --directory=~/Downloads/ yt-dlp {hint-url}")
config.bind("xm", "hint links spawn mpv {hint-url}")
config.bind("xy", "spawn mpv {url}")
config.bind("xp", "hint links spawn zathura {hint-url}")
config.bind("xx", "stop")

# config.bind('yD', 'yank domain -s')
# config.bind('yM', 'yank inline [{title}]({url}) -s')
# config.bind('yP', 'yank pretty-url -s')
# config.bind('yT', 'yank title -s')
# config.bind('yY', 'yank -s')
# config.bind('yd', 'yank domain')
# config.bind('ym', 'yank inline [{title}]({url})')
config.bind(
    "ya",
    "mode-enter caret;;selection-toggle;;move-to-end-of-document;;yank selection;;mode-leave",
)
config.bind("yp", "hint code userscript code_select.py")
config.bind("yf", "hint links yank")
# config.bind('yt', 'yank title')
# config.bind('yy', 'yank')

config.bind("zz", "zoom")
config.bind("zi", "zoom-in")
config.bind("zo", "zoom-out")
# config.bind('ZQ', 'quit')
# config.bind('ZZ', 'quit --save')

# Bindings for caret mode
config.bind(",tt", "spawn --userscript translate", mode="caret")
config.bind(",ts", "spawn --userscript translate --text -t sk", mode="caret")
config.bind(",y", "spawn --userscript highlight_text_to_link.py", mode="caret")
config.bind("/", "cmd-set-text /", mode="caret")
# config.bind('$', 'move-to-end-of-line', mode='caret')
# config.bind('0', 'move-to-start-of-line', mode='caret')
config.bind("_", "move-to-start-of-line", mode="caret")
# config.bind('<Ctrl-Space>', 'selection-drop', mode='caret')
# config.bind('<Escape>', 'mode-leave', mode='caret')
# config.bind('<Return>', 'yank selection', mode='caret')
# config.bind('<Space>', 'selection-toggle', mode='caret')
# config.bind('G', 'move-to-end-of-document', mode='caret')
config.bind("M", "scroll left", mode="caret")
config.bind("N", "scroll down", mode="caret")
config.bind("E", "scroll up", mode="caret")
config.bind("I", "scroll right", mode="caret")
config.bind("m", "move-to-prev-char", mode="caret")
config.bind("n", "move-to-next-line", mode="caret")
config.bind("e", "move-to-prev-line", mode="caret")
config.bind("i", "move-to-next-char", mode="caret")
# config.bind('V', 'selection-toggle --line', mode='caret')
# config.bind('Y', 'yank selection -s', mode='caret')
# config.bind('[', 'move-to-start-of-prev-block', mode='caret')
# config.bind(']', 'move-to-start-of-next-block', mode='caret')
# config.bind('b', 'move-to-prev-word', mode='caret')
# config.bind('c', 'mode-enter normal', mode='caret')
# config.bind('e', 'move-to-end-of-word', mode='caret')
# config.bind('gg', 'move-to-start-of-document', mode='caret')
# config.bind('o', 'selection-reverse', mode='caret')
# config.bind('v', 'selection-toggle', mode='caret')
# config.bind('w', 'move-to-next-word', mode='caret')
# config.bind('y', 'yank selection', mode='caret')
# config.bind('{', 'move-to-end-of-prev-block', mode='caret')
# config.bind('}', 'move-to-end-of-next-block', mode='caret')

# Bindings for command mode
# config.bind('<Alt-B>', 'rl-backward-word', mode='command')
# config.bind('<Alt-Backspace>', 'rl-backward-kill-word', mode='command')
# config.bind('<Alt-D>', 'rl-kill-word', mode='command')
# config.bind('<Alt-F>', 'rl-forward-word', mode='command')
# config.bind('<Ctrl-?>', 'rl-delete-char', mode='command')
# config.bind('<Ctrl-A>', 'rl-beginning-of-line', mode='command')
# config.bind('<Ctrl-B>', 'rl-backward-char', mode='command')
# config.bind('<Ctrl-C>', 'completion-item-yank', mode='command')
# config.bind('<Ctrl-D>', 'completion-item-del', mode='command')
# config.bind('<Ctrl-E>', 'rl-end-of-line', mode='command')
# config.bind('<Ctrl-F>', 'rl-forward-char', mode='command')
# config.bind('<Ctrl-H>', 'rl-backward-delete-char', mode='command')
# config.bind('<Ctrl-K>', 'rl-kill-line', mode='command')
# config.bind('<Ctrl-N>', 'command-history-next', mode='command')
# config.bind('<Ctrl-P>', 'command-history-prev', mode='command')
# config.bind('<Ctrl-Return>', 'command-accept --rapid', mode='command')
# config.bind('<Ctrl-Shift-C>', 'completion-item-yank --sel', mode='command')
# config.bind('<Ctrl-Shift-Tab>', 'completion-item-focus prev-category', mode='command')
# config.bind('<Ctrl-Shift-W>', 'rl-filename-rubout', mode='command')
# config.bind('<Ctrl-Tab>', 'completion-item-focus next-category', mode='command')
# config.bind('<Ctrl-U>', 'rl-unix-line-discard', mode='command')
# config.bind('<Ctrl-W>', 'rl-rubout " "', mode='command')
# config.bind('<Ctrl-Y>', 'rl-yank', mode='command')
# config.bind('<Down>', 'completion-item-focus --history next', mode='command')
# config.bind('<Escape>', 'mode-leave', mode='command')
# config.bind('<PgDown>', 'completion-item-focus next-page', mode='command')
# config.bind('<PgUp>', 'completion-item-focus prev-page', mode='command')
# config.bind('<Return>', 'command-accept', mode='command')
# config.bind('<Shift-Delete>', 'completion-item-del', mode='command')
# config.bind('<Shift-Tab>', 'completion-item-focus prev', mode='command')
# config.bind('<Tab>', 'completion-item-focus next', mode='command')
# config.bind('<Up>', 'completion-item-focus --history prev', mode='command')

# Bindings for hint mode
# config.bind('<Ctrl-B>', 'hint all tab-bg', mode='hint')
# config.bind('<Ctrl-F>', 'hint links', mode='hint')
# config.bind('<Ctrl-R>', 'hint --rapid links tab-bg', mode='hint')
# config.bind('<Escape>', 'mode-leave', mode='hint')
# config.bind('<Return>', 'hint-follow', mode='hint')

# Bindings for insert mode
config.bind("<Ctrl-I>", "edit-text", mode="insert")
config.bind("<Ctrl-L>", "edit-text", mode="insert")
# config.bind('<Escape>', 'mode-leave', mode='insert')
# config.bind('<Shift-Escape>', 'fake-key <Escape>', mode='insert')
# config.bind('<Shift-Ins>', 'insert-text -- {primary}', mode='insert')

# Bindings for passthrough mode
# config.bind('<Ctrl-V>', 'mode-enter passthrough')
# config.bind('<Shift-Escape>', 'mode-leave', mode='passthrough')

# Bindings for prompt mode
# config.bind('<Alt-B>', 'rl-backward-word', mode='prompt')
# config.bind('<Alt-Backspace>', 'rl-backward-kill-word', mode='prompt')
# config.bind('<Alt-D>', 'rl-kill-word', mode='prompt')
# config.bind('<Alt-F>', 'rl-forward-word', mode='prompt')
# config.bind('<Alt-Shift-Y>', 'prompt-yank --sel', mode='prompt')
# config.bind('<Alt-Y>', 'prompt-yank', mode='prompt')
# config.bind('<Ctrl-?>', 'rl-delete-char', mode='prompt')
# config.bind('<Ctrl-A>', 'rl-beginning-of-line', mode='prompt')
# config.bind('<Ctrl-B>', 'rl-backward-char', mode='prompt')
# config.bind('<Ctrl-E>', 'rl-end-of-line', mode='prompt')
# config.bind('<Ctrl-F>', 'rl-forward-char', mode='prompt')
# config.bind('<Ctrl-H>', 'rl-backward-delete-char', mode='prompt')
# config.bind('<Ctrl-K>', 'rl-kill-line', mode='prompt')
# config.bind('<Ctrl-P>', 'prompt-open-download --pdfjs', mode='prompt')
# config.bind('<Ctrl-Shift-W>', 'rl-filename-rubout', mode='prompt')
# config.bind('<Ctrl-U>', 'rl-unix-line-discard', mode='prompt')
# config.bind('<Ctrl-W>', 'rl-rubout " "', mode='prompt')
# config.bind('<Ctrl-X>', 'prompt-open-download', mode='prompt')
# config.bind('<Ctrl-Y>', 'rl-yank', mode='prompt')
# config.bind('<Down>', 'prompt-item-focus next', mode='prompt')
# config.bind('<Escape>', 'mode-leave', mode='prompt')
# config.bind('<Return>', 'prompt-accept', mode='prompt')
# config.bind('<Shift-Tab>', 'prompt-item-focus prev', mode='prompt')
# config.bind('<Tab>', 'prompt-item-focus next', mode='prompt')
# config.bind('<Up>', 'prompt-item-focus prev', mode='prompt')

# Bindings for register mode
# config.bind('<Escape>', 'mode-leave', mode='register')

# Bindings for yesno mode
# config.bind('<Alt-Shift-Y>', 'prompt-yank --sel', mode='yesno')
# config.bind('<Alt-Y>', 'prompt-yank', mode='yesno')
# config.bind('<Escape>', 'mode-leave', mode='yesno')
# config.bind('<Return>', 'prompt-accept', mode='yesno')
# config.bind('N', 'prompt-accept --save no', mode='yesno')
# config.bind('Y', 'prompt-accept --save yes', mode='yesno')
# config.bind('n', 'prompt-accept no', mode='yesno')
# config.bind('y', 'prompt-accept yes', mode='yesno')

# NORMAL MOD_KEYS
# config.bind('<Alt-1>', 'tab-focus 1')
# config.bind('<Alt-2>', 'tab-focus 2')
# config.bind('<Alt-3>', 'tab-focus 3')
# config.bind('<Alt-4>', 'tab-focus 4')
# config.bind('<Alt-5>', 'tab-focus 5')
# config.bind('<Alt-6>', 'tab-focus 6')
# config.bind('<Alt-7>', 'tab-focus 7')
# config.bind('<Alt-8>', 'tab-focus 8')
# config.bind('<Alt-9>', 'tab-focus -1')
# config.bind('<Ctrl-A>', 'navigate increment')
# config.bind('<Ctrl-Alt-p>', 'print')
# config.bind('<Ctrl-B>', 'scroll-page 0 -1')
# config.bind('<Ctrl-D>', 'scroll-page 0 0.5')
# config.bind('<Ctrl-F5>', 'reload -f')
# config.bind('<Ctrl-F>', 'scroll-page 0 1')
# config.bind('<Ctrl-N>', 'open -w')
# config.bind('<Ctrl-PgDown>', 'tab-next')
# config.bind('<Ctrl-PgUp>', 'tab-prev')
# config.bind('<Ctrl-Q>', 'quit')
# config.bind('<Ctrl-Return>', 'selection-follow -t')
# config.bind('<Ctrl-Shift-N>', 'open -p')
# config.bind('<Ctrl-Shift-T>', 'undo')
# config.bind('<Ctrl-Shift-Tab>', 'nop')
# config.bind('<Ctrl-Shift-W>', 'close')
# config.bind('<Ctrl-T>', 'open -t')
# config.bind('<Ctrl-Tab>', 'tab-focus last')
# config.bind('<Ctrl-U>', 'scroll-page 0 -0.5')
# config.bind('<Ctrl-W>', 'tab-close')
# config.bind('<Ctrl-X>', 'navigate decrement')
config.bind("<Ctrl-h>", "history")
# config.bind('<Escape>', 'clear-keychain ;; search ;; fullscreen --leave')
# config.bind('<F11>', 'fullscreen')
# config.bind('<F5>', 'reload')
# config.bind('<Return>', 'selection-follow')
# config.bind('<back>', 'back')
# config.bind('<forward>', 'forward')
