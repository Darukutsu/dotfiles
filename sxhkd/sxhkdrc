#
# WM INDEPENDENT HOTKEYS
#

# Terminal launcher
super + Return
	kitty

# Browser launcher
super + g
        qutebrowser
	#firefox-developer-edition
        #vieb

super + G
        "$XDG_CONFIG_HOME"/qutebrowser/userscripts/container-open

# print help
super + slash
        "$XDG_CONFIG_HOME"/sxhkd/rofi_launcher.sh sxhkd_help

# screenshot
@Print
        "$XDG_CONFIG_HOME"/sxhkd/rofi_launcher.sh screenshot

# poweroff menu
super + shift + @space
        "$XDG_CONFIG_HOME"/sxhkd/rofi_launcher.sh powermenu

# Brightness control
XF86MonBrightness{Up,Down}
	ddcutil -d 1 --sleep-multiplier 2.0 setvcp 10 {+,-} 20
	#brightnessctl s 5%{+,-}

# Audio control
XF86Audio{Raise,Lower}Volume
	pamixer {-i,-d} 5 ; "$XDG_CONFIG_HOME"/sxhkd/volume_notify.sh

# Audio mute
XF86AudioMute
	pamixer -t && "$XDG_CONFIG_HOME"/sxhkd/volume_notify.sh

# Media controls
XF86Audio{Play,Next,Prev}
	playerctl {play-pause,next,previous}

# dropdown terminal/scratchpad (square mid)
F20
        "$XDG_CONFIG_HOME"/sxhkd/dropdown.sh kitty-f20

F21                      
        "$XDG_CONFIG_HOME"/sxhkd/dropdown.sh kitty-f21

F22                      
        "$XDG_CONFIG_HOME"/sxhkd/dropdown.sh kitty-f22

F23                      
        "$XDG_CONFIG_HOME"/sxhkd/dropdown.sh kitty-f23

F24                      
        "$XDG_CONFIG_HOME"/sxhkd/dropdown.sh kitty-f24

#super + F11
F11
        "$XDG_CONFIG_HOME"/sxhkd/dropdown.sh kitty-fzf

#super + F12
F12
        "$XDG_CONFIG_HOME"/sxhkd/dropdown.sh kitty-drop

# progra"m launcher
super + @space
        "$XDG_CONFIG_HOME"/sxhkd/rofi_launcher.sh combi

# progra"m switcher
alt + Tab
        "$XDG_CONFIG_HOME"/sxhkd/rofi_launcher.sh window

# screenlock
#super + alt + BackSpace
#	bslock && dunstctl set-paused true

# bitwarden
super + apostrophe
        "$XDG_CONFIG_HOME"/sxhkd/rofi_launcher.sh bitwarden

# clipmenu/clipboard
super + v
        "$XDG_CONFIG_HOME"/sxhkd/rofi_launcher.sh clipboard

# Notification close
super + u
        dunstctl close-all

# Notification history control-panel
super + c
        "$XDG_CONFIG_HOME"/sxhkd/history_notify.sh show; \
        echo "mode_control_panel" >"$SXHKD_MODE_FILE"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_control_panel

# doesn't work
#
ctrl + alt + e
        rofimoji -f emoji kaomoji

# warpd click
super + x
        warpd --hint2 --oneshot --click 1

# warpd drag
super + x
        warpd --hint --drag

# warpd normal mouse move
super + alt + x
        warpd --normal

#
# MACRO MODE
#

super + q
        echo "mode_macro" >"$SXHKD_MODE_FILE"; \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Macro mode enabled"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_macro

super + control + q
        keystrokes -s && \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Macro forcestopped"

#
# BSPWM HOTKEYS
#

# toggle windows transparency
#super + {equal,minus}
#	"$XDG_CONFIG_HOME"/sxhkd/opacity.sh active {on,off}

# make sxhkd reload its configuration files:
super + Escape
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Restarting sxhkd"; \
	killall "sxhkd"; xmodmap "$XDG_CONFIG_HOME/bspwm/Xmodmap"; sxhkd &

# quit/restart bspwm
super + shift + Escape
	bspc wm -r
#super + {_,shift +}h
#	bspc {quit,wm -r}

# close and kill
#alt + q
#	bspc node -c
ctrl + shift + q
	bspc node -c

# alternate between the tiled and monocle layout
#super + f
#	bspc desktop -l next

# send the newest marked node to the newest preselected node
#super + y
#	bspc node newest.marked.local -n newest.!automatic.local

#
# state/flags
#

# set the window state
super + {t,s,f}
	bspc node -t {tiled,floating,fullscreen}

# hide mode
super + h
        echo "mode_hide" >"$SXHKD_MODE_FILE"; \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Hide mode enabled"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_hide
        
# make window appear in below level to be able to record
# with OBS xcomposite, because bspwm unmaps workspaces on lost focus
#super + c
#	bspc node -l below -t fullscreen -g sticky=on

#disables OBS below effect
#super + q 
#	bspc node any.below -l normal -g sticky=off -f

#super + s
#	bspc subscribe node -t floating -z top_left -100 0 -z top_right 100 0
#       bspc node -t floating -z top_left -100 0 -z top_right 100 0

# set the node flags
#       super + ctrl + {m,x,y,z}
#	bspc node -g {marked,locked,sticky,private}

#
# FOCUS/SWAP/TRANSFORM
#

# swap the current node and the biggest window on workspace
super + b
	bspc node -s biggest.local.window

# layouts
super + parenleft
        "$XDG_CONFIG_HOME"/sxhkd/rofi_launcher.sh layout

# layouts persistent
super + parenright
        "$XDG_CONFIG_HOME"/sxhkd/rofi_launcher.sh layout persistent

# layouts remove/reset to default
super + l
        bsp-layout remove

# pin window to foreground on every workspace
#super + p
#        bsp-layout remove

# rotates tree
# switch from vertical to horizontal tiling and vice-versa
super + {period,comma}
	bspc node @/ -R {90,270}

# rotates "switch" tree in focused node places new node
super + alt + {period,comma}
    bspc node @/ -C {forward,backward}
#super + {less,greater}

# focus (or swap with alt) the node in the given direction
super + {_,alt + }{m,n,e,i}
	bspc node -{f,s} {west,south,north,east}

# swap the node and it's descendants in the given direction
super + ctrl + {m,n,e,i}
	bspc node first_ancestor -s {west,south,north,east} && \
        bspc node -f

# focus the node for the given path jump
#       super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus prev window
#       super + bracket{left}
#	bspc node -f prev.local.!hidden.window

# focus next window
#       super + bracket{right}
#	bspc node -f next.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.occupied

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
# focus the next/previous window in the current desktop
super + {j,k}
	bspc node -f {next,prev}.local.!hidden.window

super + o
        echo "mode_focus" >"$SXHKD_MODE_FILE"; \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Focus/Swap mode enabled"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_focus

super + a
        echo "mode_focus" >"$SXHKD_MODE_FILE"; \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Focus/Swap mode enabled"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_focus

# send focused window to the given desktop
super + alt + {1-9,0}
	bspc node -d '^{1-9,10}' --follow

# focus desktop
super + {1-9,0}
	bspc desktop -f '^{1-9,10}' --follow

#
# PRESELECT
#

# mark node
super + shift + m
	bspc node -g marked=on

super + p
        echo "mode_preselect" >"$SXHKD_MODE_FILE"; \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Preselect mode enabled"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_preselect

super + shift + p
        echo "mode_passthrough" >"$SXHKD_MODE_FILE"; \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Passthrough mode enabled"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_passthrough

#
# MOVE/RESIZE
#

super + r
        echo "mode_resize" >"$SXHKD_MODE_FILE"; \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Resize mode enabled"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_resize

# move a floating window
super + w
        echo "mode_move" >"$SXHKD_MODE_FILE"; \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Move mode enabled"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_move

#
# MOUSE KEYBIDS
#
# button9 side-front
# button8 side-back
# button1 left
# button2 wheel
# button3 right

# maximize/minimize a window
super + button9
        bspc node -f pointed; bspc node -t ~fullscreen

super + @button2
        "$XDG_CONFIG_HOME"/sxhkd/colorpicker.sh

#button9 + button8
#       bspc node -t ~fullscreen

#
# DRAWING
#
super + d
        echo "mode_draw" >"$SXHKD_MODE_FILE"; \
        notify-send -t 3000 --hint int:transient:1 "sxhkd" "Draw mode enabled"; \
        killall sxhkd && sxhkd -c "$XDG_CONFIG_HOME"/sxhkd/mode_draw
