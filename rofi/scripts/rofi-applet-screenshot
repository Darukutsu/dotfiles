#!/usr/bin/env bash
set -o pipefail

## Author  : Aditya Shakya (adi1090x)
## Github  : @adi1090x
#
## Applets : Screenshot

# Theme Elements
theme="$XDG_CONFIG_HOME/rofi/applet.rasi"
if [ "$1" ]; then
  theme="$1"
fi

prompt='Screenshot'
mesg="DIR: $(xdg-user-dir PICTURES)/Screenshots"

list_col='1'
list_row='5'

# Options
layout=$(cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2)
if [[ "$layout" == 'NO' ]]; then
  option_1=" Capture Desktop"
  option_2=" Capture Area"
  option_3=" Capture Window"
  #option_4=" Capture in 5s"
  #option_5=" Capture in 10s"
  option_4=" Record Desktop"
  option_5=" Record Windwow"
else
  option_1=""
  option_2=""
  option_3=""
  #option_4=""
  #option_5=""
  #option_4=""
  #option_5=""
  option_4=""
  option_5=""
fi

# Rofi CMD
rofi_cmd() {
  rofi -theme-str "listview {columns: $list_col; lines: $list_row;}" \
    -theme-str 'textbox-prompt-colon {str: "";}' \
    -dmenu \
    -p "$prompt" \
    -mesg "$mesg" \
    -markup-rows \
    -theme ${theme}
  #-normal-window
}

# Pass variables to rofi dmenu
run_rofi() {
  echo -e "$option_1\n$option_2\n$option_3\n$option_4\n$option_5" | rofi_cmd
}

# Screenshot
time=$(date +%Y%m%d_%H%M%S)
#time=`date +%Y-%m-%d-%H-%M-%S`
geometry=$(xrandr | grep 'current' | head -n1 | cut -d',' -f2 | tr -d '[:blank:],current')
dir="$(xdg-user-dir PICTURES)/Screenshots"
file="Screenshot_${time}_${geometry}.png"

if [[ ! -d "$dir" ]]; then
  mkdir -p "$dir"
fi

# notify and view screenshot
notify_view() {
  notify_cmd_shot='notify-send -t 3000'
  ${notify_cmd_shot} "Copied to clipboard."
  viewnior ${dir}/"$file"
  if [[ -e "$dir/$file" ]]; then
    ${notify_cmd_shot} "${prompt} Saved." "$file"
  else
    ${notify_cmd_shot} "${prompt}  Deleted."
  fi
}

# Copy screenshot to clipboard
copy_shot() {
  if [ $XDG_SESSION_TYPE = x11 ]; then
    tee "$file" | xclip -selection clipboard -t image/png
  else
    tee "$file" | wl-copy -t image/png
  fi

  if ! [ -s "$file" ]; then
    rm "$file"
    exit 1
  fi
}

# countdown
countdown() {
  for sec in $(seq $1 -1 1); do
    dunstify -t 1000 --replace=699 "Taking shot in : $sec"
    sleep 1
  done
}

# take shots
shotnow() {
  if [ $XDG_SESSION_TYPE = x11 ]; then
    cd ${dir} && sleep 0.5 && maim -u -f png | copy_shot && notify_view
  else
    cd ${dir} && sleep 0.5 && grim - | copy_shot && notify_view
  fi
}

recordmon() {
  #prompt='Recording'
  #ft=gif
  #file="Record_${time}.${ft}"
  #cd ${dir} && menyoki -q record --root --select gif save "-" | copy_shot && notify_view
  obs --startrecording --scene MonitorCapture
}

recordwin() {
  obs --startrecording --scene WindowCapture
  #prompt='Recording'
  #ft=gif
  #file="Record_${time}.${ft}"
  #cd ${dir} && menyoki -q record -f --select gif save "-" | copy_shot && notify_view
}

shotwin() {
  cd ${dir} && menyoki -q capture -f --select png save "-" | copy_shot && notify_view
  #  cd ${dir} && maim -u -f png -i `xdotool getactivewindow` | copy_shot && notify_view
}

# with mouse
shotarea() {
  #set -e
  #set -o pipefail
  if [ $XDG_SESSION_TYPE = x11 ]; then
    cd ${dir} && maim -u -f png -s -k -b 2 | copy_shot && notify_view
    #cd ${dir} && maim -u -f png -s -k -b 2 -c 0.35,0.55,0.85,0.25 | copy_shot && notify_view
  else
    cd ${dir} && sleep 0.5 && slurp | grim -g - - | copy_shot && notify_view
  fi
}

# Execute Command
run_cmd() {
  if [[ "$1" == '--opt1' ]]; then
    shotnow
  elif [[ "$1" == '--opt2' ]]; then
    shotarea
  elif [[ "$1" == '--opt3' ]]; then
    shotwin
  elif [[ "$1" == '--opt4' ]]; then
    recordmon
  elif [[ "$1" == '--opt5' ]]; then
    recordwin
  fi
}

# Actions
chosen="$(run_rofi)"
case ${chosen} in
$option_1)
  run_cmd --opt1
  ;;
$option_2)
  run_cmd --opt2
  ;;
$option_3)
  run_cmd --opt3
  ;;
$option_4)
  run_cmd --opt4
  ;;
$option_5)
  run_cmd --opt5
  ;;
esac
