#!/usr/bin/env bash
set -o pipefail

## Author  : Darukutsu
## Github  : @Darukutsu
#
## Applets : Screenshot

# Theme Elements
theme="$XDG_CONFIG_HOME/rofi/applet.rasi"
if [ "$1" ]; then
  theme="$1"
fi

prompt='Screenshot'
mesg="DIR: `xdg-user-dir PICTURES`/Screenshots"

list_col='1'
list_row='5'

# Options
layout=`cat ${theme} | grep 'USE_ICON' | cut -d'=' -f2`
if [[ "$layout" == 'NO' ]]; then
  option_1=" Capture Desktop"
  option_2=" Capture Area"
  option_3=" Capture Window"
  #option_4=" Capture in 5s"
  #option_5=" Capture in 10s"
  option_4=" Record Desktop"
  option_5=" Record Windwow"
else
  option_1=""
  option_2=""
  option_3=""
  option_4=""
  option_5=""
fi

# Rofi CMD
rofi_cmd() {
  #rofi -theme-str "window {width: $win_width;}" \
    rofi -theme-str "listview {columns: $list_col; lines: $list_row;}" \
    -theme-str 'textbox-prompt-colon {str: "";}' \
    -dmenu \
    -p "$prompt" \
    -mesg "$mesg" \
    -markup-rows \
    -theme ${theme} \
    -normal-window
}

# Pass variables to rofi dmenu
run_rofi() {
  echo -e "$option_1\n$option_2\n$option_3\n$option_4\n$option_5" | rofi_cmd
}

# Screenshot
time=`date +%Y%m%d_%H%M%S`
dir="`xdg-user-dir PICTURES`/Screenshots"
#geometry=`xrandr | grep 'current' | head -n1 | cut -d',' -f2 | tr -d '[:blank:],current'`
#file="Screenshot_${time}_${geometry}.png"
ft=png
file="Screenshot_${time}.${ft}"

if [[ ! -d "$dir" ]]; then
  mkdir -p "$dir"
fi

# notify and view screenshot
notify_view() {
  notify_cmd_shot='notify-send -t 3000'
  ${notify_cmd_shot} "Copied to clipboard."
  viewnior ${dir}/"$file"
  if [[ -e "$dir/$file" ]]; then
    ${notify_cmd_shot} "${prompt} Saved." "$file"
  else
    ${notify_cmd_shot} "${prompt}  Deleted."
  fi
}

# Copy screenshot to clipboard
copy_shot () {
  tee "$file" | xclip -selection clipboard -t image/$ft
}

# countdown
countdown () {
  for sec in `seq $1 -1 1`; do
    dunstify -t 1000 --replace=699 "Taking shot in : $sec"
    sleep 1
  done
}

# take shots of whole monitor (optionaly can resize)
shotnow () {
  cd ${dir} && menyoki -q capture --root --select png save "-" | copy_shot && notify_view
}

shotarea () {
  cd ${dir} && menyoki -q capture --root --select -s 300x100 png save "-" | copy_shot && notify_view
}

shotwin () {
  cd ${dir} && menyoki -q capture -f --select png save "-" | copy_shot && notify_view
}

recordmon () {
  #prompt='Recording'
  #ft=gif
  #file="Record_${time}.${ft}"
  #cd ${dir} && menyoki -q record --root --select gif save "-" | copy_shot && notify_view
  obs --startrecording --scene MonitorCapture
}

recordwin () {
  obs --startrecording --scene WindowCapture
  #prompt='Recording'
  #ft=gif
  #file="Record_${time}.${ft}"
  #cd ${dir} && menyoki -q record -f --select gif save "-" | copy_shot && notify_view
}

# Execute Command
run_cmd() {
  if [[ "$1" == '--opt1' ]]; then
    shotnow
  elif [[ "$1" == '--opt2' ]]; then
    shotarea
  elif [[ "$1" == '--opt3' ]]; then
    shotwin
  elif [[ "$1" == '--opt4' ]]; then
    recordmon
  elif [[ "$1" == '--opt5' ]]; then
    recordwin
  fi
}

# Actions
chosen="$(run_rofi)"
case ${chosen} in
  $option_1)
    run_cmd --opt1
    ;;
  $option_2)
    run_cmd --opt2
    ;;
  $option_3)
    run_cmd --opt3
    ;;
  $option_4)
    run_cmd --opt4
    ;;
  $option_5)
    run_cmd --opt5
    ;;
esac
